<?php

namespace Serlimar\SerlEdgeBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * Tblusers
 *
 * @ORM\Table(name="tblusers", indexes={@ORM\Index(name="FirstName", columns={"FirstName"}), @ORM\Index(name="LastName", columns={"LastName"}), @ORM\Index(name="Username", columns={"Username"})})
 * @ORM\Entity
 * @UniqueEntity(fields={"username"},message="This username already exists")
 */
class Tblusers
{
    /**
     * @var integer
     *
     * @ORM\Column(name="ID", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string
     * @Assert\NotNull(
     *      message="Enter a firstname"
     * )
     * @ORM\Column(name="FirstName", type="string", length=25, nullable=true)
     */
    private $firstname;

    /**
     * @var string
     *
     * @ORM\Column(name="LastName", type="string", length=25, nullable=true)
     */
    private $lastname;

    /**
     * @var string
     * @Assert\NotNull(
     *      message="Enter a valid username"
     * )
     * @ORM\Column(name="Username", type="string", length=25, nullable=true)
     */
    private $username;

    /**
     * @var string
     * @ORM\Column(name="Password", type="string", length=254, nullable=true)
     */
    private $password;

    /**
     * @var string
     *
     * @ORM\Column(name="salt", type="string", length=50, nullable=true)
     */
    private $salt;
    
    /**
     * @var integer
     *
     * @ORM\Column(name="role_collection_id", type="integer")
     */
    private $role_collection_id;
    
    /**
     * @var integer
     *
     * @ORM\Column(name="userAccessLevel", type="integer", nullable=true)
     */
    private $useraccesslevel;

    /**
     * @var string
     *
     * @ORM\Column(name="Shortname", type="string", length=5, nullable=true)
     */
    private $shortname;

    /**
     * @var string
     *
     * @ORM\Column(name="Nota", type="text", nullable=true)
     */
    private $nota;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="LoggedIN", type="datetime", nullable=true)
     */
    private $loggedin;

    /**
     * @var string
     *
     * @ORM\Column(name="ComputerName", type="string", length=50, nullable=true)
     */
    private $computername;

    /**
     * @var string
     *
     * @ORM\Column(name="Firma", type="string", length=50, nullable=true)
     */
    private $firma;

    /**
     * @var string
     *
     * @ORM\Column(name="Functie", type="string", length=25, nullable=true)
     */
    private $functie;

    /**
     * @var boolean
     *
     * @ORM\Column(name="Kickout", type="boolean", nullable=true)
     */
    private $kickout = '0';

    /**
     * @var integer
     *
     * @ORM\Column(name="KickoutTime", type="integer", nullable=true)
     */
    private $kickouttime;

    /**
     * @var string
     *
     * @ORM\Column(name="KickoutMessage", type="string", length=255, nullable=true)
     */
    private $kickoutmessage;

    /**
     * @var string
     *
     * @ORM\Column(name="Memo", type="text", nullable=true)
     */
    private $memo;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="TimeStamp", type="datetime", nullable=true)
     */
    private $timestamp;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="UserActionDate", type="datetime", nullable=true)
     */
    private $useractiondate;

    /**
     * @var string
     *
     * @ORM\Column(name="Locked", type="string", length=50, nullable=true)
     */
    private $locked;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="LockedDate", type="datetime", nullable=true)
     */
    private $lockeddate;

    /**
     * @var string
     *
     * @ORM\Column(name="LockedUserID", type="string", length=50, nullable=true)
     */
    private $lockeduserid;

    /**
     * @var string
     *
     * @ORM\Column(name="LockedUserName", type="string", length=150, nullable=true)
     */
    private $lockedusername;

    /**
     * @var boolean
     *           

     * @ORM\Column(name="NotActive", type="boolean", nullable=true)
     */
    private $notactive = '0';
    
    
    public function getId()
    {
        return $this->id;
    }
    
    public function getUsername()
    {
        return $this->username;
    }
    
    public function getPassword()
    {
        return $this->password;
    }
    
    public function getFirstname()
    {
        return $this->firstname;
    }
    
    public function getLastname()
    {
        return $this->lastname;
    }
    
    public function getShortname()
    {
        return $this->shortname;
    }
    
    public function getComputername()
    {
        return $this->computername;
    }
    
    public function setFirstname($firstname)
    {
        $this->firstname = $firstname;
    }
    
    public function setUsername($username)
    {
        $this->username = $username;
    }
    
    public function setLastname($lastname)
    {
        $this->lastname = $lastname;
    }
    
    public function setPassword($password)
    {   
        if($password)
            $this->password = $password;
    }           

    
    public function setShortname($shortname)
    {   
        $this->shortname = $shortname;
    }
    
    public function setComputername($computername)
    {   
        $this->computername = $computername;
    }
    

    /**
     * Set salt
     *
     * @param string $salt
     *
     * @return Tblusers
     */
    public function setSalt($salt)
    {
        $this->salt = $salt;

        return $this;
    }

    /**
     * Get salt
     *
     * @return string
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * Set roleCollectionId
     *
     * @param integer $roleCollectionId
     *
     * @return Tblusers
     */
    public function setRoleCollectionId($roleCollectionId)
    {
        $this->role_collection_id = $roleCollectionId;

        return $this;
    }

    /**
     * Get roleCollectionId
     *
     * @return integer
     */
    public function getRoleCollectionId()
    {
        return $this->role_collection_id;
    }

    /**
     * Set useraccesslevel
     *
     * @param integer $useraccesslevel
     *
     * @return Tblusers
     */
    public function setUseraccesslevel($useraccesslevel)
    {
        $this->useraccesslevel = $useraccesslevel;

        return $this;
    }

    /**
     * Get useraccesslevel
     *
     * @return integer
     */
    public function getUseraccesslevel()
    {
        return $this->useraccesslevel;
    }

    /**
     * Set nota
     *
     * @param string $nota
     *
     * @return Tblusers
     */
    public function setNota($nota)
    {
        $this->nota = $nota;

        return $this;
    }

    /**
     * Get nota
     *
     * @return string
     */
    public function getNota()
    {
        return $this->nota;
    }

    /**
     * Set loggedin
     *
     * @param \DateTime $loggedin
     *
     * @return Tblusers
     */
    public function setLoggedin($loggedin)
    {
        $this->loggedin = $loggedin;

        return $this;
    }

    /**
     * Get loggedin
     *
     * @return \DateTime
     */
    public function getLoggedin()
    {
        return $this->loggedin;
    }

    /**
     * Set firma
     *
     * @param string $firma
     *
     * @return Tblusers
     */
    public function setFirma($firma)
    {
        $this->firma = $firma;

        return $this;
    }

    /**
     * Get firma
     *
     * @return string
     */
    public function getFirma()
    {
        return $this->firma;
    }

    /**
     * Set functie
     *
     * @param string $functie
     *
     * @return Tblusers
     */
    public function setFunctie($functie)
    {
        $this->functie = $functie;

        return $this;
    }

    /**
     * Get functie
     *
     * @return string
     */
    public function getFunctie()
    {
        return $this->functie;
    }

    /**
     * Set kickout
     *
     * @param boolean $kickout
     *
     * @return Tblusers
     */
    public function setKickout($kickout)
    {
        $this->kickout = $kickout;

        return $this;
    }

    /**
     * Get kickout
     *
     * @return boolean
     */
    public function getKickout()
    {
        return $this->kickout;
    }

    /**
     * Set kickouttime
     *
     * @param integer $kickouttime
     *
     * @return Tblusers
     */
    public function setKickouttime($kickouttime)
    {
        $this->kickouttime = $kickouttime;

        return $this;
    }

    /**
     * Get kickouttime
     *
     * @return integer
     */
    public function getKickouttime()
    {
        return $this->kickouttime;
    }

    /**
     * Set kickoutmessage
     *
     * @param string $kickoutmessage
     *
     * @return Tblusers
     */
    public function setKickoutmessage($kickoutmessage)
    {
        $this->kickoutmessage = $kickoutmessage;

        return $this;
    }

    /**
     * Get kickoutmessage
     *
     * @return string
     */
    public function getKickoutmessage()
    {
        return $this->kickoutmessage;
    }

    /**
     * Set memo
     *
     * @param string $memo
     *
     * @return Tblusers
     */
    public function setMemo($memo)
    {
        $this->memo = $memo;

        return $this;
    }

    /**
     * Get memo
     *
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     * Set timestamp
     *
     * @param \DateTime $timestamp
     *
     * @return Tblusers
     */
    public function setTimestamp($timestamp)
    {
        $this->timestamp = $timestamp;

        return $this;
    }

    /**
     * Get timestamp
     *
     * @return \DateTime
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * Set useractiondate
     *
     * @param \DateTime $useractiondate
     *
     * @return Tblusers
     */
    public function setUseractiondate($useractiondate)
    {
        $this->useractiondate = $useractiondate;

        return $this;
    }

    /**
     * Get useractiondate
     *
     * @return \DateTime
     */
    public function getUseractiondate()
    {
        return $this->useractiondate;
    }

    /**
     * Set locked
     *
     * @param string $locked
     *
     * @return Tblusers
     */
    public function setLocked($locked)
    {
        $this->locked = $locked;

        return $this;
    }

    /**
     * Get locked
     *
     * @return string
     */
    public function getLocked()
    {
        return $this->locked;
    }

    /**
     * Set lockeddate
     *
     * @param \DateTime $lockeddate
     *
     * @return Tblusers
     */
    public function setLockeddate($lockeddate)
    {
        $this->lockeddate = $lockeddate;

        return $this;
    }

    /**
     * Get lockeddate
     *
     * @return \DateTime
     */
    public function getLockeddate()
    {
        return $this->lockeddate;
    }

    /**
     * Set lockeduserid
     *
     * @param string $lockeduserid
     *
     * @return Tblusers
     */
    public function setLockeduserid($lockeduserid)
    {
        $this->lockeduserid = $lockeduserid;

        return $this;
    }

    /**
     * Get lockeduserid
     *
     * @return string
     */
    public function getLockeduserid()
    {
        return $this->lockeduserid;
    }

    /**
     * Set lockedusername
     *
     * @param string $lockedusername
     *
     * @return Tblusers
     */
    public function setLockedusername($lockedusername)
    {
        $this->lockedusername = $lockedusername;

        return $this;
    }

    /**
     * Get lockedusername
     *
     * @return string
     */
    public function getLockedusername()
    {
        return $this->lockedusername;
    }

    /**
     * Set notactive
     *
     * @param boolean $notactive
     *
     * @return Tblusers
     */
    public function setNotactive($notactive)
    {
        $this->notactive = $notactive;

        return $this;
    }

    /**
     * Get notactive
     *
     * @return boolean
     */
    public function getNotactive()
    {
        return $this->notactive;
    }
}
